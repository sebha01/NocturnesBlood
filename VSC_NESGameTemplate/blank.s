;
; File generated by cc65 v 2.19 - Git b75f872
;
	.fopt		compiler,"cc65 v 2.19 - Git b75f872"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_pal_bg
	.import		_ppu_wait_frame
	.import		_ppu_off
	.import		_ppu_on_all
	.import		_vram_adr
	.import		_vram_write
	.export		_palette
	.export		_main

.segment	"RODATA"

_palette:
	.byte	$02
	.byte	$14
	.byte	$20
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
S0001:
	.byte	$48,$45,$4C,$4C,$4F,$2C,$20,$57,$4F,$52,$4C,$44,$21,$00

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; for (x=0; x<500; x++) { // <-- add these lines
;
	jsr     decsp2
	ldy     #$00
	tya
	sta     (sp),y
	iny
	sta     (sp),y
L0002:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$F4
	txa
	sbc     #$01
	bvc     L0006
	eor     #$80
L0006:	bpl     L0003
;
; ppu_wait_frame(); // <-- after
;
	jsr     _ppu_wait_frame
;
; for (x=0; x<500; x++) { // <-- add these lines
;
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	jmp     L0002
;
; ppu_off();
;
L0003:	jsr     _ppu_off
;
; pal_bg(palette);
;
	lda     #<(_palette)
	ldx     #>(_palette)
	jsr     _pal_bg
;
; vram_adr(NTADR_A(2,2));  // set address
;
	ldx     #$20
	lda     #$42
	jsr     _vram_adr
;
; vram_write("HELLO, WORLD!", 13); // write bytes to video RAM
;
	lda     #<(S0001)
	ldx     #>(S0001)
	jsr     pushax
	ldx     #$00
	lda     #$0D
	jsr     _vram_write
;
; ppu_on_all();
;
	jsr     _ppu_on_all
;
; while (1);
;
L000A:	jmp     L000A

.endproc

